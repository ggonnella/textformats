#
# GFF3 format
#
# URL of specification document:
#  https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md
#
datatypes:
  #
  # (1) Main definition for parsing GFF lines
  #
  gff3_line:
    composed_of: [seqid: gff3_column_seqid, source: gff3_column_source,
                 type: gff3_column_type, start: gff3_column_start,
                 end: gff3_column_end, score: gff3_column_score,
                 strand: gff3_column_strand, phase: gff3_column_phase,
                 attributes: gff3_column_attributes]
    sep: "\t"

  #
  # (2) Columns
  #

  gff3_column_seqid: gff3_id
  gff3_column_source: {one_of: [gff3_undefined, gff3_string]}
  # "either a term from the Sequence Ontology or an SO accession number.
  # The latter alternative is distinguished using the syntax SO:000000"
  gff3_column_type: {one_of: [{regex: "SO:\\d{7}"}, gff3_string]}
  gff3_column_start: {unsigned_integer: {min: 1}}
  gff3_column_end: {unsigned_integer: {min: 1}}
  gff3_column_score: {one_of: [gff3_undefined, float]}
  gff3_column_strand: {one_of: [gff3_undefined,
                              {accepted_values: ["+", "-", "?"]}]}
  gff3_column_phase: {one_of: [gff3_undefined,
                             {unsigned_integer: {min: 0, max: 2}}]}
  gff3_column_attributes:
    list_of:
      one_of:
      - gff3_target_attribute
      - gff3_gap_attribute
      - gff3_ontology_term_attribute
      - gff3_dbxref_attribute
      - gff3_generic_attribute
    sep: ";"

  #
  # (3) Attributes
  #

  # "The format of the value is "target_id start end [strand]",
  # where strand is optional and may be "+" or "-". If the target_id
  # contains spaces, they must be escaped as hex escape %20."
  gff3_target_attribute:
    composed_of:
    - tag: {constant: "Target"}
    - value:
        composed_of:
        - target_id: gff3_target_id
        - start: {unsigned_integer: {min: 1}}
        - end: {unsigned_integer: {min: 1}}
        - strand: {accepted_values: ["+", "-"]}
        required: 3
        sep: " "
    sep: "="

  # "The Gap attribute's format consists of a series of (operation,length) pairs
  # separated by space characters [...] Each operation is a single-letter code:
  # M [...] I [...] D [...] F [...] R [...]"
  gff3_gap_attribute:
    composed_of:
    - tag: {constant: "Gap"}
    - value:
        list_of:
          composed_of:
          - operation: {accepted_values: ["M", "I", "D", "F", "R"]}
          - length: {unsigned_integer: {min: 1}}
        sep: " "
    sep: "="

  # "The value of both Ontology_term and Dbxref is the ID of the cross
  # referenced object in the form "DBTAG:ID"
  gff3_xref:
    composed_of:
      - dbtag: gff3_dbtag
      - id: gff3_attr_string
    sep: ":"
    split_by_sep: false # because ID can contain colons
  gff3_ontology_term_attribute:
    composed_of:
    - tag: {constant: "Ontology_term"}
    - value: gff3_xref
    sep: "="
  gff3_dbxref_attribute:
    composed_of:
    - tag: {constant: "Dbxref"}
    - value: gff3_xref
    sep: "="

  #
  # note: the following also matches all previous attributes,
  # but it works if used after them in one_of, since the first
  # matching choice is always selected
  #
  gff3_generic_attribute: {composed_of: [tag: gff3_attr_string,
                           value: gff3_attr_string], sep: "="}

  #
  # (4) Strings and special values
  #

  # "Literal use of tab, newline, carriage return, the percent (%) sign,
  #  and control characters must be encoded using RFC 3986 Percent-Encoding;
  #  no other characters may be encoded; [...] tab (%09); newline (%0A);
  #  carriage return (%0D); % percent (%25) control characters
  #  (%00 through %1F, %7F)"
  #  note: since tab, newline, carriage return are in 00-1F range, only use that
  gff3_string: {regex: "([^\\x00-\\x1F%\\x7F]|%([01][A-Fa-f0-9]|25|7[Ff]))+"}

  # "[...] In addition, the following characters have reserved meanings
  # in column 9 and must be escaped when used in other contexts:
  # ; semicolon (%3B) = equals (%3D) & ampersand (%26) , comma (%2C)"
  gff3_attr_string: {regex:
    "([^\\x00-\\x1F%&,;=\\x7F]|%([01][A-Fa-f0-9]|2[56Cc]|3[BDbd]|7[Ff]))+"}

  # "IDs may contain any characters, but must escape any characters
  # not in the set [a-zA-Z0-9.:^*$@!+_?-|]."
  gff3_id: {regex: "([a-zA-Z0-9.:^*$@!+_?-|]|%[A-Fa-f0-9]{2})+"}

  # "If the target_id contains spaces, they must be escaped as hex escape %20."
  gff3_target_id: {regex:
    "([^\\x00-\\x1F%&,;=\\x7F ]|%([01][A-Fa-f0-9]|2[056Cc]|3[BDbd]|7[Ff]))+"}

  # "IDs can contain unescaped colons but DBTAGs cannot"
  # note: colon is 3A
  gff3_dbtag: {regex:
      "([^\\x00-\\x1F%&,:;=\\x7F]|%([01][A-Fa-f0-9]|2[56Cc]|3[ABDabd]|7[Ff]))+"}

  # "Undefined fields are replaced with the "." character"
  gff3_undefined: {constant: {".": null}}

testdata:
  gff3_line:
    valid:
      "%c6s%BA\x09k//%25x\x09%7FX%25a\x091\x091\x09-1.0\x09?\x091\x09Ontology_term=w%7F[%25%26:%25": {"seqid":"%c6s%BA","source":"k//%25x","type":"%7FX%25a","start":1,"end":1,"score":-1.0,"strand":"?","phase":1,"attributes":[{"tag":"Ontology_term","value":{"dbtag":"w%7F[%25%26","id":"%25"}}]}
    invalid:
      encoded: [""]
      decoded: [""]
  gff3_column_seqid:
    valid: ["U", ".G", "%E5", "@%1a", "O8", "%59F%b6%9C", "JEL%bc",
            "%2f%8ac%Ee0", "s", "L"]
    invalid:
      encoded: ["%E", "5E%", "@%1", "a1%@", "%59F%b6%9", "C9%6b%F95%",
                "JEL%b", "cb%LEJ", "0eE%ca8%f2%", ""]
      decoded: ["%E", "5E%", "@%1", "a1%@", "%59F%b6%9", "C9%6b%F95%",
                "JEL%b", "cb%LEJ", "0eE%ca8%f2%", ""]
  gff3_column_source:
    valid: {"%25T%18":"%25T%18", "%7Fh":"%7Fh", "jL<%7F":"jL<%7F",
            "Js%25":"Js%25", "%07":"%07", ".%1E%25'y":".%1E%25'y",
            "%084":"%084", ".":null, "%14r":"%14r", "J,%0E%7F":"J,%0E%7F",
            "%7FT":"%7FT"}
    invalid:
      encoded: ["", "%25T%1", "81%T52%", "hF7%", "jL<%7", "F7%<Lj", "Js%2",
                "52%sJ", "%0", "70%", "y'52%E1%.", "480%", "r41%", "J,%0E%7",
                "F7%E0%,J", "TF7%"]
      decoded: [true, 1, 1.0, [], {}, "", "%25T%1", "81%T52%", "hF7%",
                "jL<%7", "F7%<Lj", "Js%2", "52%sJ", "%0", "70%", "y'52%E1%.",
                "480%", "r41%", "J,%0E%7", "F7%E0%,J", "TF7%"]
  gff3_column_type:
    valid: ["SO:9543730", "%0C", "%05", "%25", ";%0e", "%0e%25",
            "SO:0820092", "SO:5822394", "SO:4591983", "%25%7F$", "%14", "%1b",
            "SO:5714515", "SO:0340604", "%25%0d%14%17", "SO:3219319",
            "SO:3419815", "%25%7F%08", "SO:3186791", "SO:1028162"]
    invalid:
      encoded: ["", "%0", "C0%", "50%", "%2", "52%", ";%0", "e0%;", "%0e%2",
                "52%e0%", "$F7%52%", "%1", "41%", "b1%", "%25%0d%14%1",
                "71%41%d0%52%", "%25%7F%0", "80%F7%52%"]
      decoded: ["", "%0", "C0%", "50%", "%2", "52%", ";%0", "e0%;", "%0e%2",
                "52%e0%", "$F7%52%", "%1", "41%", "b1%", "%25%0d%14%1",
                "71%41%d0%52%", "%25%7F%0", "80%F7%52%"]
  gff3_column_start:
    valid: {"1":1, "2147483647":2147483647}
    invalid:
      encoded: ["a", "[]", "{}", "1.0", "-1", "0", ""]
      decoded: ["A", [], {}, 1.0, -1, 0, ""]
  gff3_column_end:
    valid: {"1":1, "2147483647":2147483647}
    invalid:
      encoded: ["a", "[]", "{}", "1.0", "-1", "0", ""]
      decoded: ["A", [], {}, 1.0, -1, 0, ""]
  gff3_column_score:
    valid: {"-inf":-.Inf, "-1.0":-1.0, "0.0":0.0, ".":null, "1.0":1.0,
            "inf":.Inf}
    invalid:
      encoded: [".c", "", "a", "[]", "{}"]
      decoded: [true, 1, [], {}, "", "A"]
  gff3_column_strand:
    valid: {"?":"?", "-":"-", ".":null, "+":"+"}
    invalid:
      encoded: [".c", "", "+c", "-c", "?c"]
      decoded: [true, 1, 1.0, [], {}, ""]
  gff3_column_phase:
    valid: {"1":1, "2":2, ".":null, "0":0}
    invalid:
      encoded: [".c", "", "a", "[]", "{}", "1.0", "-1", "3"]
      decoded: [true, 1.0, [], {}, "", "A", -1, 3]
  gff3_column_attributes:
    valid:
      "Gap=R1 M1":
        [{"tag":"Gap","value":[{"operation":"R","length":1},
                               {"operation":"M","length":1}]}]
      "Gap=R1 M10;Ontology_term=XA2:V;SM=%7F;Target=C 1 1 -;Dbxref=j:7Fn:1":
        [{"tag":"Gap","value":[{"operation":"R","length":1},
                               {"operation":"M","length":10}]},
         {"tag":"Ontology_term","value":{"dbtag":"XA2","id":"V"}},
         {"tag":"SM","value":"%7F"},
         {"tag":"Target",
           "value":{"target_id":"C","start":1,"end":1,"strand":"-"}},
         {"tag":"Dbxref","value":{"dbtag":"j","id":"7Fn:1"}}]
    invalid:
      encoded: [""]
      decoded: [[], ""]
  gff3_target_attribute:
    valid:
      "Target=1d7A07 1 1": {"tag":"Target",
                            "value":{"target_id":"1d7A07","start":1,"end":1}}
    invalid:
      encoded: [""]
      decoded: [""]
  gff3_gap_attribute:
    valid:
      "Gap=F1 M10": {"tag":"Gap",
                    "value":[{"operation":"F","length":1},
                             {"operation":"M","length":10}]}
    invalid:
      encoded: [""]
      decoded: [""]
  gff3_xref:
    valid: {"Kv:3B7F":{"dbtag":"Kv","id":"3B7F"}}
    invalid:
      encoded: [""]
      decoded: [""]
  gff3_dbxref_attribute:
    valid:
      "Dbxref=BLA:1Et7F0d1E":
          {"tag":"Dbxref","value":{"dbtag":"BLA","id":"1Et7F0d1E"}}
    invalid:
      encoded: [""]
      decoded: [""]
  gff3_ontology_term_attribute:
    valid:
      "Ontology_term=ONTO:000001": {"tag":"Ontology_term",
                                     "value":{"dbtag":"ONTO","id":"000001"}}
    invalid:
      encoded: [""]
      decoded: [""]
  gff3_generic_attribute:
    valid: {"pt=X21%3b0":{"tag":"pt","value":"X21%3b0"}}
    invalid:
      encoded: [""]
      decoded: [""]
  gff3_string:
    valid: ["Ad", "%0b(", "L%25F%1f", "w%1C", "J", "p%25a%25",
            "=", "%08B`", "%25t", "e%1a"]
    invalid: ["Ad%7", "F7%dA", "%0b(%7", "F7%(b0%", "L%25F%1", "f1%F52%L",
              "w%1", "C1%wF7%", "p%25a%25%7", "F7%52%a52%p", "=F7%",
              "%08B`%7", "F7%`F7%B80%", "%25t%7", "F7%t52%", "e%1a%7",
              "F7%a1%F7%e", "A%89B", ""]
  gff3_attr_string:
    valid: ["m?", "%2C.", "y", "ZE%0EZG", "%2C", "Z", "N%3B%12",
            "%3D%135%06", "%26"]
    invalid: ["?mF7%", ".C2%", "%7", "F7%", "GZE0%EZ", "%2", "C2%",
                "N%3B%1", "21%B3%NF7%", "%3D%135%0", "60%531%D3%", "62%",
                ""]
  gff3_id:
    valid: ["z%F4", "j%3a%cb%Ef", "%9CE", "5v%Ec.", "rQ%a7", "F%70",
            "n%08%f5", "d", "%e7CWx", "%7C"]
    invalid: ["z%F", "4F%z", "j%3a%cb%E", "fE%bc%a3%j", "EC9%", ".cE%v5",
                "rQ%a", "7a%Qr", "F%7", "07%F", "n%08%f", "5f%80%n", "xWC7e%",
                "%7", "C7%", ">1", "", "A C"]
  gff3_target_id:
    valid: ["-%26%15%26b", "[", "\"'%3DJ`", "%1B", "%3Bx%20.",
            "x", "%3D%3Bm", "%26]0", "["]
    invalid: ["b62%51%62%-", "[F7%", "`JD3%'\"", "%7", "F7%", "%1",
              "B1%F7%", ".02%xB3%", "mB3%D3%", "0]62%", "[%7", "F7%[", ""]
  gff3_dbtag:
    valid: ["F", "?kgw", "3YY>", "%2C%3B", "%2C",
            "%3B%09%02", "*%08", "f", "%14(t%1d%2C"]
    invalid: ["%7", "F7%", "3YY>%7", "F7%>YY3", "%2C%3B%7",
              "F7%F7%B3%C2%", "%2", "C2%", "%3B%09%02%7",
              "F7%20%F7%90%B3%", "*%0", "80%*", "%14(t%1d%2", "C2%d1%t(41%",
              ""]
  gff3_undefined:
    valid: {".":null}
    invalid:
      encoded: [".c", ""]
      decoded: [true, 1, 1.0, [], {}, ""]
