# specification of 'wiggle_trackdef'
# generated by genspec
datatypes:
  double_quoted_string: {regex: "\"(\\\\\"|[^\"])*\""}

  wiggle_trackdef_line: {list_of: wiggle_trackdef_line_item,
                         minlength: 1, sep: " ", split_by_sep: false, pfx: "track "}

  wiggle_trackdef_line_item: {one_of:
    [wiggle_trackdef_line_item_type,
     wiggle_trackdef_line_item_name,
     wiggle_trackdef_line_item_description,
     wiggle_trackdef_line_item_visibility,
     wiggle_trackdef_line_item_color,
     wiggle_trackdef_line_item_altColor,
     wiggle_trackdef_line_item_priority,
     wiggle_trackdef_line_item_autoScale,
     wiggle_trackdef_line_item_alwaysZero,
     wiggle_trackdef_line_item_gridDefault,
     wiggle_trackdef_line_item_maxHeightPixels,
     wiggle_trackdef_line_item_graphType,
     wiggle_trackdef_line_item_viewLimits,
     wiggle_trackdef_line_item_yLineMark,
     wiggle_trackdef_line_item_yLineOnOff,
     wiggle_trackdef_line_item_windowingFunction,
     wiggle_trackdef_line_item_smoothingWindow,
     wiggle_trackdef_line_item_viewLimitsMax,
     wiggle_trackdef_line_item_transformFunc]}

  wiggle_trackdef_line_item_type:
    composed_of: [key: {constant: type}, value: {constant: wiggle_0}]
    sep: =

  wiggle_trackdef_line_item_name:
    composed_of: [key: {constant: name}, value: double_quoted_string]
    sep: =
    split_by_sep: false

  wiggle_trackdef_line_item_description:
    composed_of: [key: {constant: description}, value: double_quoted_string]
    sep: =
    split_by_sep: false

  wiggle_trackdef_line_item_description:
    composed_of: [key: {constant: visibility},
                  value: accepted_values: [full, dense, hide]]
    sep: =

  uint8: {unsigned_integer: {min: 0, max: 255}}

  wiggle_colordef:
    composed_of: [red: uint8, green: uint8, blue: uint8]
    sep: ,

  wiggle_trackdef_line_item_color:
    composed_of: [key: {constant: color}, value: wiggle_colordef]
    sep: =


  wiggle_trackdef_line_item_altColor:
    composed_of: [key: {constant: altColor}, value: wiggle_colordef]
    sep: =

  wiggle_trackdef_line_item_priority:
    composed_of: [key: {constant: priority}, value: unsigned_integer]
    sep: =

  wiggle_bool: {accepted_values: ["on": true, "off": false]}

  wiggle_trackdef_line_item_autoScale:
    composed_of: [key: {constant: autoScale}, value: wiggle_bool]
    sep: =

  wiggle_trackdef_line_item_alwaysZero:
    composed_of: [key: {constant: alwaysZero}, value: wiggle_bool]
    sep: =

  wiggle_trackdef_line_item_gridDefault:
    composed_of: [key: {constant: gridDefault}, value: wiggle_bool]
    sep: =

  wiggle_trackdef_line_item_maxHeightPixels:
    composed_of:
      key: {constant: maxHeightPixels}
      value:
        composed_of:
          max: unsigned_integer
          default: unsigned_integer
          min: unsigned_integer
          sep: :
    sep: =

  wiggle_trackdef_line_item_graphType:
    composed_of:
      key: {constant: graphType}
      value: {accepted_values: ["bar", "points"]}
    sep: =

  wiggle_trackdef_line_item_viewLimits:
    composed_of:
      key: {constant: viewLimits}
      value:
        composed_of:
          lower: float
          upper: float
        sep: :
    sep: =

  wiggle_trackdef_line_item_yLineMark:
    composed_of:
      key: {constant: yLineMark}
      value: float
    sep: =

  wiggle_trackdef_line_item_yLineOnOff:
    composed_of:
      key: {constant: yLineOnOff}
      value: wiggle_bool
    sep: =

  wiggle_trackdef_line_item_windowingFunction:
    composed_of:
      key: {constant: windowingFunction}
      value: {accepted_values: ["mean+whiskers", "maximum", "mean", "minimum"]}
    sep: =

  wiggle_trackdef_line_item_smoothingWindow:
    composed_of:
      key: {constant: smoothingWindow}
      value:
        one_of:
          - {constant: {off: null}}
          - {unsigned_integer: {min: 2, max: 16}}
    sep: =

  wiggle_trackdef_line_item_transformFunc:
    composed_of:
      key: {constant: transformFunc}
      value: {accepted_values: ["NONE", "LOG"]}
    sep: =

  wiggle_trackdef_line_item_viewLimitsMax:
    composed_of:
      key: {constant: viewLimitsMax}
      value:
        composed_of:
          lower: float
          upper: float
        sep: :
    sep: =

