datatypes:
  type: dict
  keysrules:
    type: string
    regex: &valid_id '^[A-Za-z_][A-Za-z0-9_]*'
  valuesrules:
    type: dict
    anyof:
    - schema: &numeric_typedef
        integer:
          required: true
          excludes: [unsigned_integer, float, value, one_of_values]
          type: dict
          schema:
            max:
              type: integer
            min:
              type: integer
            max_excluded:
              dependencies: max
              type: boolean
            min_excluded:
              dependencies: min
              type: boolean
        unsigned_integer:
          required: true
          excludes: [integer, float, value, one_of_values]
          type: dict
          schema:
            max:
              type: integer
            min:
              type: integer
            max_excluded:
              dependencies: max
              type: boolean
            min_excluded:
              dependencies: min
              type: boolean
        float:
          required: true
          excludes: [integer, unsigned_integer, value, one_of_values]
          type: dict
          schema:
            max:
              type: float
            min:
              type: float
            max_excluded:
              dependencies: max
              type: boolean
            min_excluded:
              dependencies: min
              type: boolean
        constant:
          required: true
          excludes: [range, one_of_values]
          type: [integer, float]
        one_of_values:
          required: true
          excludes: [range, value]
          type: list
          schema:
            type: [integer, float]
        of:
          type: string
          allowed: [integer, float, unsigned_integer]
          excludes: [value, one_of_values]
    - schema: &string_typedef
        constant:
          required: true
          excludes: [regex, regexes, one_of_values]
          anyof: &string_or_map_value
          - type: string
            empty: false
          - type: dict
            maxlength: 1
            minlength: 1
            keysrules:
              type: string
              empty: false
            valuesrules:
              type: [string, boolean, integer, float]
              nullable: true
        one_of_values:
          required: true
          excludes: [value, regex, regexes]
          type: list
          minlength: 1
          schema:
            anyof: *string_or_map_value
        regex:
          required: true
          excludes: [value, one_of_values, regexes]
          type: string
          empty: false
        regexes:
          required: true
          excludes: [value, one_of_values, regex]
          type: list
          minlength: 1
          schema:
            anyof: *string_or_map_value
        empty:
          type: [string, boolean, integer, float]
          nullable: true
        reverse:
          anyof:
          # for regexes, one_of_values:
          - type: dict
            excludes: [value, regex]
            keysrules:
              type: [string, boolean, integer, float]
              nullable: true
            valuesrules:
              type: string
          # for regex:
          - type: string
            excludes: [value, one_of_values, regexes]
    - schema: &compound_typedef
        one_of:
          required: true
          excludes: [composed_of, list_of]
          type: list
          schema:
            anyof: &ref_or_typedef
              - type: string
              - type: dict
                schema: *numeric_typedef
              - type: dict
                schema: *string_typedef
        composed_of:
          required: true
          excludes: [list_of, one_of]
          type: list
          schema:
            type: dict
            keysrules:
              type: string
              regex: *valid_id
            valuesrules:
              anyof: *ref_or_typedef
        list_of:
          required: true
          excludes: [composed_of, one_of]
          dependencies: sep
          anyof: *ref_or_typedef
        implicit:
          dependencies: composed_of
        sep:
          type: string
          excludes: [one_of]
        pfx:
          type: string
          excludes: [one_of]
        sfx:
          type: string
          excludes: [one_of]
        varlen:
          type: boolean
          excludes: [n_optional]
          dependencies: composed_of
        last_optional:
          type: boolean
          dependencies: composed_of
          excludes: [varlen]
        min_n_lastelem:
          type: integer
          dependencies: varlen
        max_n_lastelem:
          type: integer
          dependencies: varlen
        split_by_sep:
          type: boolean
          dependencies: sep
        minlength:
          dependencies: list_of
          type: integer
          excludes: [one_of, composed_of]
        maxlength:
          dependencies: list_of
          type: integer
          excludes: [one_of, composed_of]
        empty:
          nullable: true
          excludes: [composed_of]
